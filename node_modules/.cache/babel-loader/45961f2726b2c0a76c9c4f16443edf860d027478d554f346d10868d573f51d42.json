{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/bengoldfried/PersonalProjects/BlingsProject/blings-project/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import Contacts from\"../Data/Contacts.json\";function formatPhoneNumber(phoneNumber){var cleaned=(''+phoneNumber).replace(/\\D/g,'');var match=cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);if(match){return'('+match[1]+') '+match[2]+match[3];}return null;}function isStringMadeOfLetters(str){var pattern=/^[a-zA-Z]+$/;return pattern.test(str);}export function getAge(date){var today=new Date();var birthDate=date.substring(0,10);birthDate=new Date(birthDate);var age=today.getFullYear()-birthDate.getFullYear();var monthDiff=today.getMonth()-birthDate.getMonth();if(monthDiff<0||monthDiff===0&&today.getDate()<birthDate.getDate()){age--;}return age;}export function SearchData(input){var retContacts=JSON.parse(JSON.stringify(Contacts));var name=\"\";var age=\"\";var arr=input.split(\" \");if(arr.length>3)//can only take a max of 3 parameters\n{return null;}var _iterator=_createForOfIteratorHelper(arr),_step;try{var _loop=function _loop(){var elem=_step.value;if(isStringMadeOfLetters(elem)){if(name===\"\"){name+=elem.toLowerCase();}else{name=name+\" \"+elem;}retContacts=retContacts.filter(function(contact){return contact.name.toLowerCase()===name||contact.name.toLowerCase().split(' ').includes(name);});}else{if(elem.length>3&&elem.length<9)//input a number that isnt age or phone#\n{return{v:[]};}else if(elem.length<=3){age=elem;retContacts=retContacts.filter(function(contact){return\"\"+getAge(contact.birthday)===age;});}else{var phoneNumber=formatPhoneNumber(elem);retContacts=retContacts.filter(function(contact){return phoneNumber===contact.phone_number;});}}};for(_iterator.s();!(_step=_iterator.n()).done;){var _ret=_loop();if(typeof _ret===\"object\")return _ret.v;}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(retContacts.length===0){return[];}return retContacts;}","map":{"version":3,"names":["Contacts","formatPhoneNumber","phoneNumber","cleaned","replace","match","isStringMadeOfLetters","str","pattern","test","getAge","date","today","Date","birthDate","substring","age","getFullYear","monthDiff","getMonth","getDate","SearchData","input","retContacts","JSON","parse","stringify","name","arr","split","length","_iterator","_createForOfIteratorHelper","_step","_loop","elem","value","toLowerCase","filter","contact","includes","v","birthday","phone_number","s","n","done","_ret","err","e","f"],"sources":["/Users/bengoldfried/PersonalProjects/BlingsProject/blings-project/src/Utils/SearchData.js"],"sourcesContent":["import Contacts from \"../Data/Contacts.json\"\n\n\n\n function formatPhoneNumber(phoneNumber) {\n    const cleaned = ('' + phoneNumber).replace(/\\D/g, '');\n    const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n    return '(' + match[1] + ') ' + match[2] + match[3];\n    }\n    return null;\n}\n\nfunction isStringMadeOfLetters(str) {\n    const pattern = /^[a-zA-Z]+$/;\n    return pattern.test(str);\n}\n      \nexport function getAge(date)\n{\n    const today = new Date();\n    let birthDate = date.substring(0, 10);\n    birthDate = new Date(birthDate);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n  \n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n  \n    return age;\n}\n\nexport function SearchData(input)\n{\n    let retContacts = JSON.parse(JSON.stringify(Contacts))\n    let name = \"\";\n    let age = \"\";\n    \n    const arr = input.split(\" \");\n    if(arr.length > 3) //can only take a max of 3 parameters\n    {\n        return null;\n    }\n\n    for(let elem of arr)\n    {\n        if(isStringMadeOfLetters(elem)) \n        {\n            if(name === \"\")\n                {name += elem.toLowerCase();}\n            else\n                {name = name + \" \" + elem;}     \n                retContacts = retContacts.filter(contact => (contact.name.toLowerCase() === name) || (contact.name.toLowerCase().split(' ').includes(name)));\n            }\n        else\n        {\n            if(elem.length > 3 && elem.length < 9) //input a number that isnt age or phone#\n            {\n                return [];\n            }\n            else if(elem.length <=3){\n                age = elem;\n                retContacts = retContacts.filter(contact => (\"\" + getAge(contact.birthday)) === age)\n            }\n            else{\n                const phoneNumber = formatPhoneNumber(elem);\n                retContacts = retContacts.filter(contact => phoneNumber === contact.phone_number);\n            }\n        }\n    }\n    if(retContacts.length === 0) {\n        return [];\n    }\n    return retContacts;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}